events {}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log /var/log/nginx/access.log main;
    # error_log /var/log/nginx/error.log warn;

    upstream backend_servers {
        server 192.168.80.133:8038 max_fails=3 fail_timeout=60s;  # Primary server
        server 192.168.80.133:8048 backup;  # Fallback server
        server 192.168.80.133:8058 backup;  # Tertiary server
    }

    server {
        listen 80;

        # Global CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        location / {
            proxy_pass http://backend_servers;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
    }

    error_log /dev/stdout info;  # Set log level to info
}